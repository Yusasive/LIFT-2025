service: communication-service

frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-north-1'}
  vpc:
    subnetIds:
      - ${ssm:/litf-${opt:stage, 'dev'}/subnet1-Id}
      - ${ssm:/litf-${opt:stage, 'dev'}/subnet2-Id}
    securityGroupIds:
      - ${ssm:/litf-${opt:stage, 'dev'}/security-group-Id}
  httpApi:
    cors:
      allowedOrigins:
        - ${ssm:/litf-${opt:stage, 'dev'}/client-ui}
        - ${ssm:/litf-${opt:stage, 'dev'}/admin-ui}
        - ${ssm:/litf-${opt:stage, 'dev'}/base-url}
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowedHeaders:
        - Content-Type
        - Authorization
        - X-Amz-Date
        - X-Api-Key
        - X-Amz-Security-Token
        - X-Requested-With
      allowCredentials: true
  environment:
    DB_HOST: ${ssm:/litf-${opt:stage, 'dev'}/db-host}
    DB_PORT: ${ssm:/litf-${opt:stage, 'dev'}/db-port}
    DB_NAME: ${ssm:/litf-${opt:stage, 'dev'}/auth-service/db-name}
    DB_USER: ${ssm:/litf-${opt:stage, 'dev'}/db-user}
    DB_PASSWORD: ${ssm:/litf-${opt:stage, 'dev'}/db-pass}
    APP_SERVICE_SECRET: ${ssm:/litf-${opt:stage, 'dev'}/auth-service/app-secret}
    USER_SERVICE_URL: ${ssm:/litf-${opt:stage, 'dev'}/user-service/base-url}
    INTERNAL_SERVICE_KEY: ${ssm:/litf-${opt:stage, 'dev'}/internal-key}
    NODE_ENV: ${opt:stage, 'dev'}
    ALLOWED_ORIGINS: ${ssm:/litf-${opt:stage, 'dev'}/allowed-origins}
    COOKIE_DOMAIN: ${ssm:/litf-${opt:stage, 'dev'}/cookie-domain}
    AWS_SES_REGION: ${ssm:/litf-${opt:stage, 'dev'}/aws-ses-region}
    FROM_EMAIL: ${ssm:/litf-${opt:stage, 'dev'}/from-email}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ses:SendEmail
        - ses:SendRawEmail
        - ses:GetSendStatistics
        - ses:VerifyEmailIdentity
        - ses:GetSendQuota
        - ses:GetAccountSendingEnabled
        - ses:ListIdentities
        - ses:GetIdentityVerificationAttributes
      Resource: "*"
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "arn:aws:logs:*:*:*"

plugins:
  - serverless-offline

functions:
  internal:
    handler: app/handlers/internalHandler.handler
    events:
      - httpApi:
          path: /internal
          method: post

  sendEmail:
    handler: app/handlers/emailHandler.handler
    events:
      - httpApi:
          path: /email/send
          method: post

custom:
  serverless-offline:
    httpPort: 4000
    lambdaPort: 3000
    host: 0.0.0.0 