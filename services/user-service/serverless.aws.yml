service: user-service
frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-north-1'}
  vpc:
    subnetIds:
      - ${ssm:/litf-${opt:stage, 'dev'}/subnet1-Id}
      - ${ssm:/litf-${opt:stage, 'dev'}/subnet2-Id}
    securityGroupIds:
      - ${ssm:/litf-${opt:stage, 'dev'}/security-group-Id}
  httpApi:
    cors:
      allowedOrigins:
        - ${ssm:/litf-${opt:stage, 'dev'}/client-ui}
        - ${ssm:/litf-${opt:stage, 'dev'}/admin-ui}
        - ${ssm:/litf-${opt:stage, 'dev'}/base-url}/user
      allowedMethods:
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
        - OPTIONS
      allowedHeaders:
        - Content-Type
        - Authorization
        - X-Amz-Date
        - X-Api-Key
        - X-Amz-Security-Token
        - X-Requested-With
      allowCredentials: true
  environment:
    DB_HOST: ${ssm:/litf-${opt:stage, 'dev'}/db-host}
    DB_PORT: ${ssm:/litf-${opt:stage, 'dev'}/db-port}
    DB_NAME: ${ssm:/litf-${opt:stage, 'dev'}/user-service/db-name}
    DB_USER: ${ssm:/litf-${opt:stage, 'dev'}/db-user}
    DB_PASSWORD: ${ssm:/litf-${opt:stage, 'dev'}/db-pass}
    APP_SERVICE_SECRET: ${ssm:/litf-${opt:stage, 'dev'}/user-service/app-secret}
    AUTH_SERVICE_URL: ${ssm:/litf-${opt:stage, 'dev'}/auth-service/base-url}
    INTERNAL_SERVICE_KEY: ${ssm:/litf-${opt:stage, 'dev'}/internal-key}
    NODE_ENV: ${opt:stage, 'dev'}
    ALLOWED_ORIGINS: ${ssm:/litf-${opt:stage, 'dev'}/allowed-origins}
    COOKIE_DOMAIN: ${ssm:/litf-${opt:stage, 'dev'}/cookie-domain}
    S3_UPLOAD_BUCKET_NAME: litf-${opt:stage, 'dev'}-media
    CLOUDFRONT_DOMAIN: ${ssm:/litf-${opt:stage, 'dev'}/cloudfront-uploads-domain, ''}
    CLOUDFRONT_PRIVATE_KEY: ${ssm:/litf-${opt:stage, 'dev'}/cloudfront-private-key, ''}
    CLOUDFRONT_KEY_PAIR_ID: ${ssm:/litf-${opt:stage, 'dev'}/cloudfront-key-pair-id, ''}
    # SNS_TOPIC: ${env:SNS_TOPIC, 'arn:aws:sns:eu-central-1:123456789012:CustomerTopic'}
    # NOTIFY_TOPIC: ${env:NOTIFY_TOPIC, 'arn:aws:sns:eu-central-1:123456789012:NotifyTopic'}
  # Commenting out IAM roles - likely culprit
  iamRoleStatements:
    # - Effect: "Allow"
    #   Action:
    #     - "sns:Publish"
    #   Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:PutObjectAcl"
        - "s3:DeleteObject"
        - "s3:GetObject"
      Resource: 
        - "arn:aws:s3:::litf-*-frontend/*"
        - "arn:aws:s3:::litf-*-frontend"
        - "arn:aws:s3:::litf-*-uploads/*"
        - "arn:aws:s3:::litf-*-uploads"
        - "arn:aws:s3:::litf-*-media/*"
        - "arn:aws:s3:::litf-*-media"
    - Effect: "Allow"
      Action:
        - "cloudfront:CreateInvalidation"
        - "cloudfront:GetDistribution"
      Resource: "*"

functions:
  CreateUser:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /signup
          method: post
  UserLogin:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /login
          method: post
  UserEdit:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /edit
          method: patch

  UserProfileCreate:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /profile
          method: post

  UserProfileGet:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /profile
          method: get

  UserProfileUpdate:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /profile
          method: patch

  UserStatusUpdate:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /status
          method: patch

  UserList:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /users
          method: get

  UserLogout:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /logout
          method: post

  ClientRegister:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /client/register
          method: post

  ClientLogin:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /client/login
          method: post

  AddAddress:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /profile/address
          method: post

  UpdateAddress:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /profile/address/{address_id}
          method: patch

  DeleteAddress:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /profile/address/{address_id}
          method: delete

  SetPrimaryAddress:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /profile/address/{address_id}/primary
          method: patch

  AddCompanyRep:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /company-reps
          method: post

  GetCompanyReps:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /company-reps
          method: get

  GetCompanyRepById:
    handler: app/handlers/userHandler.openHandler
    events:
      - httpApi:
          path: /company-reps/{company_rep_id}
          method: get

  DeleteCompanyRep:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /company-reps/{company_rep_id}
          method: delete

  UpdateCompanyRep:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /company-reps/{company_rep_id}
          method: patch
  
  UploadImage:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /upload/image
          method: post

  DeleteImage:
    handler: app/handlers/userHandler.handler
    events:
      - httpApi:
          path: /upload/delete
          method: delete

  internal:
    handler: app/handlers/internalHandler.handler
    events:
      - httpApi:
          path: /internal
          method: post

  runMigration:
    handler: app/config/runMigration.handler
